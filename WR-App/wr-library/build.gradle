apply plugin: 'com.android.library'

//publish {
//
//    def groupProjectID = 'com.whiteroads.library'
//    def artifactProjectID = 'analytics'
//    def publishVersionID = '1.0.0'
//
//    userOrg = 'whiteroads'
//    repoName = 'Whiteroads'
//    groupId = groupProjectID
//    artifactId = artifactProjectID
//    bintrayUser = 'whiteroads'
//    bintrayKey = '5319246eaa267b6c55db6ef95c2274f03a396f8c'
//    publishVersion = publishVersionID
//    desc = 'No Description'
//    website = 'https://github.com/whiteroads18/analytics'
//
//    // Step 2: Add the custom publication details like below
//    publishing {
//        publications {
//            MyPub(MavenPublication) {
//                groupId 'com.whiteroads.library'
//                artifactId 'analytics'
//                version '1.0.0'
//            }
//        }
//    }
//
//    //Step 3: don't forget to add your custom publication
//    publications = ['MyPub']
//
//}

ext {
    bintrayRepo = 'Whiteroads'
    bintrayName = 'Whiteroads'

    publishedGroupId = 'com.whiteroads.library'
    libraryName = 'WrLibrary'
    artifact = 'wr-library'

    libraryDescription = 'No Description'

    siteUrl = 'https://github.com/whiteroads18/analytics'
    gitUrl = 'https://github.com/whiteroads18/analytics.git'

    libraryVersion = '1.0.0'

    developerId = 'whiteroads'
    developerName = 'whiteroads'
    developerEmail = 'admin@whiteroads.ai'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}


android {
    compileSdkVersion 27

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName "1.0_library"
        resConfig "en"
        resConfigs "mdpi"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }

        sourceSets {
            androidTest.assets.srcDirs +=
                    files("$projectDir/schemas".toString())
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard.cfg'
            debuggable false
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.android.support:support-v4:27.0.2'
    implementation 'com.squareup.retrofit2:converter-gson:2.0.0'
    implementation 'com.google.android.gms:play-services-location:16.0.0'
//    implementation 'com.google.firebase:firebase-config:16.1.0'
//    implementation 'com.google.firebase:firebase-core:16.0.4'
    implementation 'de.greenrobot:eventbus:2.4.0'
//    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.5'
//    implementation 'com.google.firebase:firebase-messaging:17.3.4'
    implementation 'android.arch.persistence.room:runtime:1.1.1'
    annotationProcessor 'android.arch.persistence.room:compiler:1.1.1'
}

apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/installv1.gradle'
apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle'
